{"uid":"48677d1abde3aa23","name":"Additional Test ShopDemo Page","fullName":"tests.shopdemoqa.test_shopdemo.TestShopDemoPage#test_add_multiple_item_to_cart_successfully","historyId":"7752be1714cd17c86575d8fe28af6aa7","time":{"start":1691117389535,"stop":1691117389535,"duration":0},"status":"broken","statusMessage":"ValueError: response body:\n{\"message\":\"API rate limit exceeded for 199.19.85.226. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\n\nrequest url:\nhttps://api.github.com/repos/mozilla/geckodriver/releases/latest\nresponse headers:\n{'Date': 'Fri, 04 Aug 2023 02:49:49 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1691117724', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '279', 'X-GitHub-Request-Id': '07BF:3564:207CC9:21AFD8:64CC674D'}","statusTrace":"request = <SubRequest 'setup' for <Function test_add_multiple_item_to_cart_successfully[getData1]>>\n\n    @pytest.fixture(scope=\"function\")\n    def setup(request):\n        \"\"\"Fixture for all Test\"\"\"\n        global driver\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n            driver = webdriver.Chrome(\n                service=ChromeService(ChromeDriverManager().install())\n            )\n        elif browser_name == \"firefox\":\n            driver = webdriver.Firefox(\n>               service=FirefoxService(GeckoDriverManager().install())\n\ntests/conftest.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/firefox.py:37: in install\n    driver_path = self._get_driver_path(self.driver)\n../../../hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/core/manager.py:30: in _get_driver_path\n    file = self._download_manager.download_file(driver.get_driver_download_url())\n../../../hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/drivers/firefox.py:39: in get_driver_download_url\n    driver_version_to_download = self.get_driver_version_to_download()\n../../../hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/core/driver.py:51: in get_driver_version_to_download\n    self._driver_to_download_version = self._version if self._version not in (None, \"latest\") else self.get_latest_release_version()\n../../../hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/drivers/firefox.py:31: in get_latest_release_version\n    resp = self._http_client.get(\n../../../hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/core/http.py:37: in get\n    self.validate_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [403]>\n\n    @staticmethod\n    def validate_response(resp: requests.Response):\n        status_code = resp.status_code\n        if status_code == 404:\n            raise ValueError(f\"There is no such driver by url {resp.url}\")\n        elif status_code == 401:\n            raise ValueError(f\"API Rate limit exceeded. You have to add GH_TOKEN!!!\")\n        elif resp.status_code != 200:\n>           raise ValueError(\n                f\"response body:\\n{resp.text}\\n\"\n                f\"request url:\\n{resp.request.url}\\n\"\n                f\"response headers:\\n{dict(resp.headers)}\\n\"\n            )\nE           ValueError: response body:\nE           {\"message\":\"API rate limit exceeded for 199.19.85.226. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\nE           \nE           request url:\nE           https://api.github.com/repos/mozilla/geckodriver/releases/latest\nE           response headers:\nE           {'Date': 'Fri, 04 Aug 2023 02:49:49 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1691117724', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '279', 'X-GitHub-Request-Id': '07BF:3564:207CC9:21AFD8:64CC674D'}\n\n../../../hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/core/http.py:20: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"getData","time":{"start":1691117389536,"stop":1691117389536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1691117389536,"stop":1691117389798,"duration":262},"status":"broken","statusMessage":"ValueError: response body:\n{\"message\":\"API rate limit exceeded for 199.19.85.226. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\n\nrequest url:\nhttps://api.github.com/repos/mozilla/geckodriver/releases/latest\nresponse headers:\n{'Date': 'Fri, 04 Aug 2023 02:49:49 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1691117724', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '279', 'X-GitHub-Request-Id': '07BF:3564:207CC9:21AFD8:64CC674D'}\n\n","statusTrace":"  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/Users/runner/work/selenium-python-template/selenium-python-template/tests/conftest.py\", line 34, in setup\n    service=FirefoxService(GeckoDriverManager().install())\n  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/firefox.py\", line 37, in install\n    driver_path = self._get_driver_path(self.driver)\n  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/core/manager.py\", line 30, in _get_driver_path\n    file = self._download_manager.download_file(driver.get_driver_download_url())\n  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/drivers/firefox.py\", line 39, in get_driver_download_url\n    driver_version_to_download = self.get_driver_version_to_download()\n  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/core/driver.py\", line 51, in get_driver_version_to_download\n    self._driver_to_download_version = self._version if self._version not in (None, \"latest\") else self.get_latest_release_version()\n  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/drivers/firefox.py\", line 31, in get_latest_release_version\n    resp = self._http_client.get(\n  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/core/http.py\", line 37, in get\n    self.validate_response(resp)\n  File \"/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/webdriver_manager/core/http.py\", line 20, in validate_response\n    raise ValueError(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('getData')"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.shopdemoqa"},{"name":"suite","value":"test_shopdemo"},{"name":"subSuite","value":"TestShopDemoPage"},{"name":"host","value":"Mac-1691116651126.local"},{"name":"thread","value":"1706-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.shopdemoqa.test_shopdemo"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"getData","value":"{'search_key': 'mini dress', 'product_name': 'WHITE NEW SEASON BELTED BODYCON MINI DRESS', 'increase_quantity': '2'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"6e35c51a2a1a07eb","status":"passed","time":{"start":1691116458708,"stop":1691116472454,"duration":13746}}]},"tags":["@pytest.mark.usefixtures('getData')","smoke"]},"source":"48677d1abde3aa23.json","parameterValues":["{'search_key': 'mini dress', 'product_name': 'WHITE NEW SEASON BELTED BODYCON MINI DRESS', 'increase_quantity': '2'}"]}